namespace Fumbbl.Model.Types
{
    public class Card : FfbEnumerationFactory
    {
        public string ShortName;
        public CardType Type;
        public CardTarget Target;
        public bool RemainsInPlay;
        public InducementPhase[] Phases;
        public InducementDuration Duration;
        public string Description;

        public Card(string name) : base(name) { }

        public static Card BeguilingBracers = new Card("Beguiling Bracers") { ShortName = "Beguiling Bracers", Type = CardType.MagicItems, Target = CardTarget.OwnPlayer, RemainsInPlay = false, Phases = new InducementPhase[] { InducementPhase.StartOfOwnTurn }, Duration = InducementDuration.UntilEndOfGame, Description = "Player gets Hypnotic Gaze, Side Step & Bone-Head" };
        public static Card BeltofInvulnerability = new Card("Belt of Invulnerability") { ShortName = "Invulnerability Belt", Type = CardType.MagicItems, Target = CardTarget.OwnPlayer, RemainsInPlay = false, Phases = new InducementPhase[] {  InducementPhase.EndOfOwnTurn,  InducementPhase.AfterKickoffToOpponent }, Duration = InducementDuration.UntilEndOfGame, Description = "No modifiers or re-rolls on armour rolls" };
        public static Card FawndoughsHeadband = new Card("Fawndough's Headband") { ShortName = "Fawndough's Headband", Type = CardType.MagicItems, Target = CardTarget.OwnPlayer, RemainsInPlay = false, Phases = new InducementPhase[] { InducementPhase.StartOfOwnTurn }, Duration = InducementDuration.UntilEndOfTurn, Description = "Player gets Pass & Accurate, opponents get +1 to intercept" };
        public static Card ForceShield = new Card("Force Shield") { ShortName = "Force Shield", Type = CardType.MagicItems, Target = CardTarget.OwnPlayer, RemainsInPlay = false, Phases = new InducementPhase[] {  InducementPhase.EndOfOwnTurn,  InducementPhase.AfterKickoffToOpponent }, Duration = InducementDuration.WhileHoldingTheBall, Description = "Player gets Sure Hands & Fend" };
        public static Card GiktasStrengthofdaBear = new Card("Gikta's Strength of da Bear") { ShortName = "Gikta's Strength", Type = CardType.MagicItems, Target = CardTarget.OwnPlayer, RemainsInPlay = true, Phases = new InducementPhase[] { InducementPhase.StartOfOwnTurn }, Duration = InducementDuration.UntilEndOfDrive, Description = "Player gets +1 ST for this drive, then -1 ST for the remainder of the game" };
        public static Card GlovesofHolding = new Card("Gloves of Holding") { ShortName = "Gloves of Holding", Type = CardType.MagicItems, Target = CardTarget.OwnPlayer, RemainsInPlay = false, Phases = new InducementPhase[] {  InducementPhase.BeforeKickoffScatter }, Duration = InducementDuration.UntilEndOfGame, Description = "Player gets Catch & Sure Hands, but may not Pass or Hand-off" };
        public static Card InertiaDamper = new Card("Inertia Damper") { ShortName = "Inertia Damper", Type = CardType.MagicItems, Target = CardTarget.OwnPlayer, RemainsInPlay = false, Phases = new InducementPhase[] {  InducementPhase.EndOfOwnTurn,  InducementPhase.AfterKickoffToOpponent }, Duration = InducementDuration.UntilEndOfDrive, Description = "Opponents get -1 ST to Blitzing from 1 or more squares away" };
        public static Card LuckyCharm = new Card("Lucky Charm") { ShortName = "Lucky Charm", Type = CardType.MagicItems, Target = CardTarget.OwnPlayer, RemainsInPlay = false, Phases = new InducementPhase[] {  InducementPhase.AfterInducementsPurchased }, Duration = InducementDuration.UntilUsed, Description = "Ignore first armour break roll" };
        public static Card MagicGlovesofJarkLongarm = new Card("Magic Gloves of Jark Longarm") { ShortName = "Magic Gloves", Type = CardType.MagicItems, Target = CardTarget.OwnPlayer, RemainsInPlay = false, Phases = new InducementPhase[] {  InducementPhase.EndOfOwnTurn,  InducementPhase.AfterKickoffToOpponent }, Duration = InducementDuration.UntilEndOfDrive, Description = "Player gets Pass Block & +1 to interception" };
        public static Card GoodOldMagicCodpiece = new Card("Good Old Magic Codpiece") { ShortName = "Magic Codpiece", Type = CardType.MagicItems, Target = CardTarget.OwnPlayer, RemainsInPlay = false, Phases = new InducementPhase[] {  InducementPhase.AfterInducementsPurchased }, Duration = InducementDuration.UntilEndOfGame, Description = "Player cannot be fouled and no modifiers to injury rolls" };
        public static Card RabbitsFoot = new Card("Rabbit's Foot") { ShortName = "Rabbit's Foot", Type = CardType.MagicItems, Target = CardTarget.OwnPlayer, RemainsInPlay = false, Phases = new InducementPhase[] { InducementPhase.StartOfOwnTurn }, Duration = InducementDuration.UntilEndOfGame, Description = "Player gets Pro (not playable on a Loner)" };
        public static Card WandofSmashing = new Card("Wand of Smashing") { ShortName = "Wand of Smashing", Type = CardType.MagicItems, Target = CardTarget.OwnPlayer, RemainsInPlay = false, Phases = new InducementPhase[] { InducementPhase.StartOfOwnTurn }, Duration = InducementDuration.UntilEndOfTurn, Description = "Player gets +1 ST & Mighty Blow" };
        public static Card BlatantFoul = new Card("Blatant Foul") { ShortName = "Blatant Foul", Type = CardType.DirtyTricks, Target = CardTarget.Turn, RemainsInPlay = false, Phases = new InducementPhase[] { InducementPhase.StartOfOwnTurn }, Duration = InducementDuration.UntilEndOfTurn, Description = "Next foul breaks armour automatically" };
        public static Card ChopBlock = new Card("Chop Block") { ShortName = "Chop Block", Type = CardType.DirtyTricks, Target = CardTarget.OwnPlayer, RemainsInPlay = false, Phases = new InducementPhase[] {  InducementPhase.EndOfOwnTurn }, Duration = InducementDuration.UntilEndOfTurn, Description = "Unmoved player drops prone and stuns an adjacent player" };
        public static Card CustardPie = new Card("Custard Pie") { ShortName = "Custard Pie", Type = CardType.DirtyTricks, Target = CardTarget.OpposingPlayer, RemainsInPlay = false, Phases = new InducementPhase[] { InducementPhase.StartOfOwnTurn }, Duration = InducementDuration.UntilEndOfTurn, Description = "Opponent distracted as per Hypnotic Gaze" };
        public static Card Distract = new Card("Distract") { ShortName = "Distract", Type = CardType.DirtyTricks, Target = CardTarget.OwnPlayer, RemainsInPlay = false, Phases = new InducementPhase[] {  InducementPhase.EndOfOwnTurn,  InducementPhase.AfterKickoffToOpponent }, Duration = InducementDuration.UntilEndOfOpponentsTurn, Description = "Player gets Disturbing Presence & opponents in 3 squares get Bone-head" };
        public static Card GreasedShoes = new Card("Greased Shoes") { ShortName = "Greased Shoes", Type = CardType.DirtyTricks, Target = CardTarget.Turn, RemainsInPlay = false, Phases = new InducementPhase[] {  InducementPhase.EndOfOwnTurn,  InducementPhase.AfterKickoffToOpponent }, Duration = InducementDuration.UntilEndOfOpponentsTurn, Description = "Opposing players need to roll 5+ to Go For It" };
        public static Card GromskullsExplodingRunes = new Card("Gromskull's Exploding Runes") { ShortName = "Exploding Runes", Type = CardType.DirtyTricks, Target = CardTarget.OwnPlayer, RemainsInPlay = false, Phases = new InducementPhase[] { InducementPhase.BeforeSetup }, Duration = InducementDuration.UntilEndOfGame, Description = "Player gets Bombardier, No Hands, Secret Weapon & -1 to pass" };
        public static Card IllegalSubstitution = new Card("Illegal Substitution") { ShortName = "Illegal Substitution", Type = CardType.DirtyTricks, Target = CardTarget.Turn, RemainsInPlay = false, Phases = new InducementPhase[] { InducementPhase.StartOfOwnTurn }, Duration = InducementDuration.UntilEndOfTurn, Description = "Place an extra player in your end zone" };
        public static Card KickingBoots = new Card("Kicking Boots") { ShortName = "Kicking Boots", Type = CardType.DirtyTricks, Target = CardTarget.OwnPlayer, RemainsInPlay = false, Phases = new InducementPhase[] {  InducementPhase.BeforeKickoffScatter }, Duration = InducementDuration.UntilEndOfGame, Description = "Player gets Kick, Dirty Player & -1 MA" };
        public static Card PitTrap = new Card("Pit Trap") { ShortName = "Pit Trap", Type = CardType.DirtyTricks, Target = CardTarget.AnyPlayer, RemainsInPlay = false, Phases = new InducementPhase[] {  InducementPhase.EndOfOwnTurn }, Duration = InducementDuration.UntilEndOfTurn, Description = "Player is placed prone, no armour roll" };
        public static Card SpikedBall = new Card("Spiked Ball") { ShortName = "Spiked Ball", Type = CardType.DirtyTricks, Target = CardTarget.Turn, RemainsInPlay = false, Phases = new InducementPhase[] {  InducementPhase.BeforeKickoffScatter }, Duration = InducementDuration.UntilEndOfDrive, Description = "Any failed pick up or catch roll results in being stabbed" };
        public static Card StolenPlaybook = new Card("Stolen Playbook") { ShortName = "Stolen Playbook", Type = CardType.DirtyTricks, Target = CardTarget.OwnPlayer, RemainsInPlay = false, Phases = new InducementPhase[] {  InducementPhase.EndOfOwnTurn }, Duration = InducementDuration.UntilEndOfDrive, Description = "Player gets Pass Block and Shadowing" };
        public static Card WitchsBrew = new Card("Witch's Brew") { ShortName = "Witch Brew", Type = CardType.DirtyTricks, Target = CardTarget.OpposingPlayer, RemainsInPlay = false, Phases = new InducementPhase[] {  InducementPhase.BeforeKickoffScatter }, Duration = InducementDuration.UntilEndOfDrive, Description = "Poison an opponent (random effect)" };
    }
}
